// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mnist_nn_predict.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mnist_nn_predict::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mnist_nn_predict::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state1 = "1";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state2 = "10";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state3 = "100";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state4 = "1000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state5 = "10000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state6 = "100000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state7 = "1000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state8 = "10000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state9 = "100000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state10 = "1000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state11 = "10000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state12 = "100000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state131 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<132> mnist_nn_predict::ap_ST_fsm_state132 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_0 = "00000000000000000000000000000000";
const int mnist_nn_predict::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_6 = "110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_31 = "110001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_5C = "1011100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_A = "1010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_1E = "11110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_35 = "110101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_49 = "1001001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_60 = "1100000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_74 = "1110100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_F = "1111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3A = "111010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_65 = "1100101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_12 = "10010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2E = "101110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_1A = "11010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_45 = "1000101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_70 = "1110000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2A = "101010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_55 = "1010101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_80 = "10000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3D = "111101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_59 = "1011001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_1 = "1";
const sc_lv<1> mnist_nn_predict::ap_const_lv1_0 = "0";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2 = "10";
const sc_lv<1> mnist_nn_predict::ap_const_lv1_1 = "1";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3 = "11";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_B = "1011";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_11 = "10001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_13 = "10011";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2C = "101100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2D = "101101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_36 = "110110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3C = "111100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3E = "111110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_57 = "1010111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_58 = "1011000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_61 = "1100001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_67 = "1100111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_68 = "1101000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_69 = "1101001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_82 = "10000010";
const sc_lv<7> mnist_nn_predict::ap_const_lv7_0 = "0000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_10 = "10000";
const sc_lv<16> mnist_nn_predict::ap_const_lv16_0 = "0000000000000000";
const sc_lv<10> mnist_nn_predict::ap_const_lv10_0 = "0000000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2B = "101011";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3B = "111011";
const sc_lv<6> mnist_nn_predict::ap_const_lv6_0 = "000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_56 = "1010110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_66 = "1100110";
const sc_lv<4> mnist_nn_predict::ap_const_lv4_0 = "0000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_81 = "10000001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_83 = "10000011";
const sc_lv<4> mnist_nn_predict::ap_const_lv4_F = "1111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_7 = "111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_C = "1100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_1B = "11011";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_32 = "110010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_37 = "110111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_46 = "1000110";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_5D = "1011101";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_62 = "1100010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_71 = "1110001";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_4 = "100";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_2F = "101111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_5A = "1011010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_1F = "11111";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_4A = "1001010";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_75 = "1110101";
const sc_lv<16> mnist_nn_predict::ap_const_lv16_310 = "1100010000";
const sc_lv<7> mnist_nn_predict::ap_const_lv7_40 = "1000000";
const sc_lv<7> mnist_nn_predict::ap_const_lv7_1 = "1";
const sc_lv<10> mnist_nn_predict::ap_const_lv10_310 = "1100010000";
const sc_lv<10> mnist_nn_predict::ap_const_lv10_1 = "1";
const sc_lv<32> mnist_nn_predict::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<6> mnist_nn_predict::ap_const_lv6_20 = "100000";
const sc_lv<6> mnist_nn_predict::ap_const_lv6_1 = "1";
const sc_lv<4> mnist_nn_predict::ap_const_lv4_A = "1010";
const sc_lv<4> mnist_nn_predict::ap_const_lv4_1 = "1";
const sc_lv<5> mnist_nn_predict::ap_const_lv5_0 = "00000";
const bool mnist_nn_predict::ap_const_boolean_1 = true;

mnist_nn_predict::mnist_nn_predict(sc_module_name name) : sc_module(name), mVcdFile(0) {
    weight1_U = new mnist_nn_predict_weight1("weight1_U");
    weight1_U->clk(ap_clk);
    weight1_U->reset(ap_rst_n_inv);
    weight1_U->address0(weight1_address0);
    weight1_U->ce0(weight1_ce0);
    weight1_U->q0(weight1_q0);
    bias1_U = new mnist_nn_predict_bias1("bias1_U");
    bias1_U->clk(ap_clk);
    bias1_U->reset(ap_rst_n_inv);
    bias1_U->address0(bias1_address0);
    bias1_U->ce0(bias1_ce0);
    bias1_U->q0(bias1_q0);
    weight2_U = new mnist_nn_predict_weight2("weight2_U");
    weight2_U->clk(ap_clk);
    weight2_U->reset(ap_rst_n_inv);
    weight2_U->address0(weight2_address0);
    weight2_U->ce0(weight2_ce0);
    weight2_U->q0(weight2_q0);
    bias2_U = new mnist_nn_predict_bias2("bias2_U");
    bias2_U->clk(ap_clk);
    bias2_U->reset(ap_rst_n_inv);
    bias2_U->address0(bias2_address0);
    bias2_U->ce0(bias2_ce0);
    bias2_U->q0(bias2_q0);
    weight3_U = new mnist_nn_predict_weight3("weight3_U");
    weight3_U->clk(ap_clk);
    weight3_U->reset(ap_rst_n_inv);
    weight3_U->address0(weight3_address0);
    weight3_U->ce0(weight3_ce0);
    weight3_U->q0(weight3_q0);
    bias3_U = new mnist_nn_predict_bias3("bias3_U");
    bias3_U->clk(ap_clk);
    bias3_U->reset(ap_rst_n_inv);
    bias3_U->address0(bias3_address0);
    bias3_U->ce0(bias3_ce0);
    bias3_U->q0(bias3_q0);
    mnist_nn_predict_CRTL_BUS_s_axi_U = new mnist_nn_predict_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>("mnist_nn_predict_CRTL_BUS_s_axi_U");
    mnist_nn_predict_CRTL_BUS_s_axi_U->AWVALID(s_axi_CRTL_BUS_AWVALID);
    mnist_nn_predict_CRTL_BUS_s_axi_U->AWREADY(s_axi_CRTL_BUS_AWREADY);
    mnist_nn_predict_CRTL_BUS_s_axi_U->AWADDR(s_axi_CRTL_BUS_AWADDR);
    mnist_nn_predict_CRTL_BUS_s_axi_U->WVALID(s_axi_CRTL_BUS_WVALID);
    mnist_nn_predict_CRTL_BUS_s_axi_U->WREADY(s_axi_CRTL_BUS_WREADY);
    mnist_nn_predict_CRTL_BUS_s_axi_U->WDATA(s_axi_CRTL_BUS_WDATA);
    mnist_nn_predict_CRTL_BUS_s_axi_U->WSTRB(s_axi_CRTL_BUS_WSTRB);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ARVALID(s_axi_CRTL_BUS_ARVALID);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ARREADY(s_axi_CRTL_BUS_ARREADY);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ARADDR(s_axi_CRTL_BUS_ARADDR);
    mnist_nn_predict_CRTL_BUS_s_axi_U->RVALID(s_axi_CRTL_BUS_RVALID);
    mnist_nn_predict_CRTL_BUS_s_axi_U->RREADY(s_axi_CRTL_BUS_RREADY);
    mnist_nn_predict_CRTL_BUS_s_axi_U->RDATA(s_axi_CRTL_BUS_RDATA);
    mnist_nn_predict_CRTL_BUS_s_axi_U->RRESP(s_axi_CRTL_BUS_RRESP);
    mnist_nn_predict_CRTL_BUS_s_axi_U->BVALID(s_axi_CRTL_BUS_BVALID);
    mnist_nn_predict_CRTL_BUS_s_axi_U->BREADY(s_axi_CRTL_BUS_BREADY);
    mnist_nn_predict_CRTL_BUS_s_axi_U->BRESP(s_axi_CRTL_BUS_BRESP);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ACLK(ap_clk);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ap_start(ap_start);
    mnist_nn_predict_CRTL_BUS_s_axi_U->interrupt(interrupt);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ap_ready(ap_ready);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ap_done(ap_done);
    mnist_nn_predict_CRTL_BUS_s_axi_U->ap_idle(ap_idle);
    output1_U = new mnist_nn_predict_output1("output1_U");
    output1_U->clk(ap_clk);
    output1_U->reset(ap_rst_n_inv);
    output1_U->address0(output1_address0);
    output1_U->ce0(output1_ce0);
    output1_U->we0(output1_we0);
    output1_U->d0(output1_d0);
    output1_U->q0(output1_q0);
    output2_U = new mnist_nn_predict_output2("output2_U");
    output2_U->clk(ap_clk);
    output2_U->reset(ap_rst_n_inv);
    output2_U->address0(output2_address0);
    output2_U->ce0(output2_ce0);
    output2_U->we0(output2_we0);
    output2_U->d0(output2_d0);
    output2_U->q0(output2_q0);
    output3_U = new mnist_nn_predict_output3("output3_U");
    output3_U->clk(ap_clk);
    output3_U->reset(ap_rst_n_inv);
    output3_U->address0(output3_address0);
    output3_U->ce0(output3_ce0);
    output3_U->we0(output3_we0);
    output3_U->d0(output3_d0);
    output3_U->q0(output3_q0);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1 = new mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1<1,4,32,32,32>("mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1");
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->clk(ap_clk);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->reset(ap_rst_n_inv);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->din0(grp_fu_443_p0);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->din1(grp_fu_443_p1);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->ce(ap_var_for_const0);
    mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1->dout(grp_fu_443_p2);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2 = new mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1<1,3,32,32,32>("mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2");
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->clk(ap_clk);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->reset(ap_rst_n_inv);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->din0(grp_fu_451_p0);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->din1(grp_fu_451_p1);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->ce(ap_var_for_const0);
    mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2->dout(grp_fu_451_p2);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3 = new mnist_nn_predict_fdiv_32ns_32ns_32_12_1<1,12,32,32,32>("mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3");
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->clk(ap_clk);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->reset(ap_rst_n_inv);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->din0(ap_var_for_const1);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->din1(reg_470);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->ce(ap_var_for_const0);
    mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3->dout(grp_fu_455_p2);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4 = new mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1<1,8,32,32,32>("mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4");
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->clk(ap_clk);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->reset(ap_rst_n_inv);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->din0(ap_var_for_const2);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->din1(grp_fu_460_p1);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->ce(ap_var_for_const0);
    mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4->dout(grp_fu_460_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state102);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state104);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state105);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state106);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state113);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state114);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state55);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state56);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state70);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state71);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state74);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state75);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state87);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state88);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state89);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state90);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state93);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state94);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state97);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state98);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond1_fu_774_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond1_fu_774_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bias1_address0);
    sensitive << ( tmp_reg_804 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_bias2_address0);
    sensitive << ( tmp_1_reg_874 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_bias2_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_bias3_address0);
    sensitive << ( tmp_8_reg_944 );
    sensitive << ( ap_CS_fsm_state89 );

    SC_METHOD(thread_bias3_ce0);
    sensitive << ( ap_CS_fsm_state89 );

    SC_METHOD(thread_exitcond1_fu_774_p2);
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( k_3_reg_432 );

    SC_METHOD(thread_exitcond2_fu_712_p2);
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( j_2_reg_398 );

    SC_METHOD(thread_exitcond3_fu_684_p2);
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( k_2_reg_387 );

    SC_METHOD(thread_exitcond4_fu_621_p2);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( j_1_reg_353 );

    SC_METHOD(thread_exitcond5_fu_593_p2);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( k_1_reg_342 );

    SC_METHOD(thread_exitcond6_fu_529_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_320 );

    SC_METHOD(thread_exitcond7_fu_513_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( k_reg_285 );

    SC_METHOD(thread_exitcond8_fu_652_p2);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( i_i9_reg_376 );

    SC_METHOD(thread_exitcond9_fu_743_p2);
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( i_i1_reg_421 );

    SC_METHOD(thread_exitcond_fu_561_p2);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( i_i_reg_331 );

    SC_METHOD(thread_grp_fu_443_p0);
    sensitive << ( reg_490 );
    sensitive << ( z1_reg_308 );
    sensitive << ( z2_reg_364 );
    sensitive << ( z3_reg_409 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state114 );

    SC_METHOD(thread_grp_fu_443_p1);
    sensitive << ( reg_465 );
    sensitive << ( bias1_load_reg_843 );
    sensitive << ( bias2_load_reg_913 );
    sensitive << ( bias3_load_reg_983 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state56 );
    sensitive << ( ap_CS_fsm_state71 );
    sensitive << ( ap_CS_fsm_state94 );
    sensitive << ( ap_CS_fsm_state99 );
    sensitive << ( ap_CS_fsm_state114 );

    SC_METHOD(thread_grp_fu_451_p0);
    sensitive << ( weight1_load_reg_833 );
    sensitive << ( weight2_load_reg_908 );
    sensitive << ( weight3_load_reg_978 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state91 );

    SC_METHOD(thread_grp_fu_451_p1);
    sensitive << ( reg_485 );
    sensitive << ( reg_502 );
    sensitive << ( input_load_reg_838 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state91 );

    SC_METHOD(thread_grp_fu_460_p1);
    sensitive << ( tmp_12_i_fu_588_p1 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_12_i1_fu_679_p1 );
    sensitive << ( ap_CS_fsm_state63 );
    sensitive << ( tmp_12_i2_fu_769_p1 );
    sensitive << ( ap_CS_fsm_state106 );

    SC_METHOD(thread_i_1_fu_658_p2);
    sensitive << ( i_i9_reg_376 );

    SC_METHOD(thread_i_2_fu_749_p2);
    sensitive << ( i_i1_reg_421 );

    SC_METHOD(thread_i_fu_567_p2);
    sensitive << ( i_i_reg_331 );

    SC_METHOD(thread_input_r_Addr_A);
    sensitive << ( input_r_Addr_A_orig );

    SC_METHOD(thread_input_r_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_fu_541_p1 );

    SC_METHOD(thread_input_r_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_input_r_Din_A);

    SC_METHOD(thread_input_r_EN_A);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_input_r_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_input_r_WEN_A);

    SC_METHOD(thread_j_3_fu_535_p2);
    sensitive << ( j_reg_320 );

    SC_METHOD(thread_j_4_fu_627_p2);
    sensitive << ( j_1_reg_353 );

    SC_METHOD(thread_j_5_fu_718_p2);
    sensitive << ( j_2_reg_398 );

    SC_METHOD(thread_k_4_fu_519_p2);
    sensitive << ( k_reg_285 );

    SC_METHOD(thread_k_5_fu_599_p2);
    sensitive << ( k_1_reg_342 );

    SC_METHOD(thread_k_6_fu_780_p2);
    sensitive << ( k_3_reg_432 );

    SC_METHOD(thread_k_7_fu_690_p2);
    sensitive << ( k_2_reg_387 );

    SC_METHOD(thread_next_mul_fu_507_p2);
    sensitive << ( phi_mul_reg_296 );

    SC_METHOD(thread_output1_address0);
    sensitive << ( tmp_reg_804 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( output1_addr_2_reg_856 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( tmp_i_fu_573_p1 );
    sensitive << ( tmp_s_fu_633_p1 );

    SC_METHOD(thread_output1_ce0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output1_d0);
    sensitive << ( reg_478 );
    sensitive << ( reg_495 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output1_we0);
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_output2_address0);
    sensitive << ( tmp_1_reg_874 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( output2_addr_2_reg_926 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state87 );
    sensitive << ( tmp_i1_fu_664_p1 );
    sensitive << ( tmp_6_fu_724_p1 );

    SC_METHOD(thread_output2_ce0);
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_output2_d0);
    sensitive << ( reg_478 );
    sensitive << ( reg_495 );
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_output2_we0);
    sensitive << ( ap_CS_fsm_state60 );
    sensitive << ( ap_CS_fsm_state87 );

    SC_METHOD(thread_output3_address0);
    sensitive << ( tmp_8_reg_944 );
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( output3_addr_2_reg_996 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( tmp_3_fu_786_p1 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( tmp_i2_fu_755_p1 );

    SC_METHOD(thread_output3_ce0);
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state130 );

    SC_METHOD(thread_output3_d0);
    sensitive << ( reg_478 );
    sensitive << ( reg_495 );
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state130 );

    SC_METHOD(thread_output3_we0);
    sensitive << ( ap_CS_fsm_state103 );
    sensitive << ( ap_CS_fsm_state130 );

    SC_METHOD(thread_output_r_Addr_A);
    sensitive << ( output_r_Addr_A_orig );

    SC_METHOD(thread_output_r_Addr_A_orig);
    sensitive << ( tmp_3_reg_1019 );
    sensitive << ( ap_CS_fsm_state132 );

    SC_METHOD(thread_output_r_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_output_r_Din_A);
    sensitive << ( output3_q0 );
    sensitive << ( ap_CS_fsm_state132 );

    SC_METHOD(thread_output_r_EN_A);
    sensitive << ( ap_CS_fsm_state132 );

    SC_METHOD(thread_output_r_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_output_r_WEN_A);
    sensitive << ( ap_CS_fsm_state132 );

    SC_METHOD(thread_tmp_10_cast_fu_556_p1);
    sensitive << ( tmp_9_fu_550_p2 );

    SC_METHOD(thread_tmp_10_fu_609_p3);
    sensitive << ( k_1_reg_342 );

    SC_METHOD(thread_tmp_11_fu_642_p2);
    sensitive << ( tmp_12_cast_reg_880 );
    sensitive << ( tmp_cast_fu_638_p1 );

    SC_METHOD(thread_tmp_12_cast_fu_617_p1);
    sensitive << ( tmp_10_fu_609_p3 );

    SC_METHOD(thread_tmp_12_fu_700_p3);
    sensitive << ( k_2_reg_387 );

    SC_METHOD(thread_tmp_12_i1_fu_679_p1);
    sensitive << ( tmp_12_neg_i1_fu_673_p2 );

    SC_METHOD(thread_tmp_12_i2_fu_769_p1);
    sensitive << ( tmp_12_neg_i2_fu_763_p2 );

    SC_METHOD(thread_tmp_12_i_fu_588_p1);
    sensitive << ( tmp_12_neg_i_fu_582_p2 );

    SC_METHOD(thread_tmp_12_neg_i1_fu_673_p2);
    sensitive << ( tmp_12_to_int_i1_fu_669_p1 );

    SC_METHOD(thread_tmp_12_neg_i2_fu_763_p2);
    sensitive << ( tmp_12_to_int_i2_fu_760_p1 );

    SC_METHOD(thread_tmp_12_neg_i_fu_582_p2);
    sensitive << ( tmp_12_to_int_i_fu_578_p1 );

    SC_METHOD(thread_tmp_12_to_int_i1_fu_669_p1);
    sensitive << ( reg_502 );

    SC_METHOD(thread_tmp_12_to_int_i2_fu_760_p1);
    sensitive << ( output3_load_1_reg_1001 );

    SC_METHOD(thread_tmp_12_to_int_i_fu_578_p1);
    sensitive << ( reg_485 );

    SC_METHOD(thread_tmp_13_cast_fu_647_p1);
    sensitive << ( tmp_11_fu_642_p2 );

    SC_METHOD(thread_tmp_13_fu_733_p2);
    sensitive << ( tmp_15_cast_reg_950 );
    sensitive << ( tmp_6_cast_fu_729_p1 );

    SC_METHOD(thread_tmp_15_cast_fu_708_p1);
    sensitive << ( tmp_12_fu_700_p3 );

    SC_METHOD(thread_tmp_16_cast_fu_738_p1);
    sensitive << ( tmp_13_fu_733_p2 );

    SC_METHOD(thread_tmp_1_fu_605_p1);
    sensitive << ( k_1_reg_342 );

    SC_METHOD(thread_tmp_3_fu_786_p1);
    sensitive << ( k_3_reg_432 );

    SC_METHOD(thread_tmp_4_cast_fu_546_p1);
    sensitive << ( j_reg_320 );

    SC_METHOD(thread_tmp_4_fu_541_p1);
    sensitive << ( j_reg_320 );

    SC_METHOD(thread_tmp_6_cast_fu_729_p1);
    sensitive << ( j_2_reg_398 );

    SC_METHOD(thread_tmp_6_fu_724_p1);
    sensitive << ( j_2_reg_398 );

    SC_METHOD(thread_tmp_8_fu_696_p1);
    sensitive << ( k_2_reg_387 );

    SC_METHOD(thread_tmp_9_fu_550_p2);
    sensitive << ( phi_mul_reg_296 );
    sensitive << ( tmp_4_cast_fu_546_p1 );

    SC_METHOD(thread_tmp_cast_fu_638_p1);
    sensitive << ( j_1_reg_353 );

    SC_METHOD(thread_tmp_fu_525_p1);
    sensitive << ( k_reg_285 );

    SC_METHOD(thread_tmp_i1_fu_664_p1);
    sensitive << ( i_i9_reg_376 );

    SC_METHOD(thread_tmp_i2_fu_755_p1);
    sensitive << ( i_i1_reg_421 );

    SC_METHOD(thread_tmp_i_fu_573_p1);
    sensitive << ( i_i_reg_331 );

    SC_METHOD(thread_tmp_s_fu_633_p1);
    sensitive << ( j_1_reg_353 );

    SC_METHOD(thread_weight1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_10_cast_fu_556_p1 );

    SC_METHOD(thread_weight1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_weight2_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_13_cast_fu_647_p1 );

    SC_METHOD(thread_weight2_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_weight3_address0);
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( tmp_16_cast_fu_738_p1 );

    SC_METHOD(thread_weight3_ce0);
    sensitive << ( ap_CS_fsm_state89 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond7_fu_513_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond6_fu_529_p2 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( exitcond_fu_561_p2 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( exitcond5_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( exitcond4_fu_621_p2 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( exitcond8_fu_652_p2 );
    sensitive << ( ap_CS_fsm_state88 );
    sensitive << ( exitcond3_fu_684_p2 );
    sensitive << ( ap_CS_fsm_state89 );
    sensitive << ( exitcond2_fu_712_p2 );
    sensitive << ( ap_CS_fsm_state104 );
    sensitive << ( exitcond9_fu_743_p2 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond1_fu_774_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mnist_nn_predict_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_r_Addr_A, "(port)input_r_Addr_A");
    sc_trace(mVcdFile, input_r_EN_A, "(port)input_r_EN_A");
    sc_trace(mVcdFile, input_r_WEN_A, "(port)input_r_WEN_A");
    sc_trace(mVcdFile, input_r_Din_A, "(port)input_r_Din_A");
    sc_trace(mVcdFile, input_r_Dout_A, "(port)input_r_Dout_A");
    sc_trace(mVcdFile, input_r_Clk_A, "(port)input_r_Clk_A");
    sc_trace(mVcdFile, input_r_Rst_A, "(port)input_r_Rst_A");
    sc_trace(mVcdFile, output_r_Addr_A, "(port)output_r_Addr_A");
    sc_trace(mVcdFile, output_r_EN_A, "(port)output_r_EN_A");
    sc_trace(mVcdFile, output_r_WEN_A, "(port)output_r_WEN_A");
    sc_trace(mVcdFile, output_r_Din_A, "(port)output_r_Din_A");
    sc_trace(mVcdFile, output_r_Dout_A, "(port)output_r_Dout_A");
    sc_trace(mVcdFile, output_r_Clk_A, "(port)output_r_Clk_A");
    sc_trace(mVcdFile, output_r_Rst_A, "(port)output_r_Rst_A");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWVALID, "(port)s_axi_CRTL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWREADY, "(port)s_axi_CRTL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_AWADDR, "(port)s_axi_CRTL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WVALID, "(port)s_axi_CRTL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WREADY, "(port)s_axi_CRTL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WDATA, "(port)s_axi_CRTL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_WSTRB, "(port)s_axi_CRTL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARVALID, "(port)s_axi_CRTL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARREADY, "(port)s_axi_CRTL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_ARADDR, "(port)s_axi_CRTL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RVALID, "(port)s_axi_CRTL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RREADY, "(port)s_axi_CRTL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RDATA, "(port)s_axi_CRTL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_RRESP, "(port)s_axi_CRTL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BVALID, "(port)s_axi_CRTL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BREADY, "(port)s_axi_CRTL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CRTL_BUS_BRESP, "(port)s_axi_CRTL_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, weight1_address0, "weight1_address0");
    sc_trace(mVcdFile, weight1_ce0, "weight1_ce0");
    sc_trace(mVcdFile, weight1_q0, "weight1_q0");
    sc_trace(mVcdFile, bias1_address0, "bias1_address0");
    sc_trace(mVcdFile, bias1_ce0, "bias1_ce0");
    sc_trace(mVcdFile, bias1_q0, "bias1_q0");
    sc_trace(mVcdFile, weight2_address0, "weight2_address0");
    sc_trace(mVcdFile, weight2_ce0, "weight2_ce0");
    sc_trace(mVcdFile, weight2_q0, "weight2_q0");
    sc_trace(mVcdFile, bias2_address0, "bias2_address0");
    sc_trace(mVcdFile, bias2_ce0, "bias2_ce0");
    sc_trace(mVcdFile, bias2_q0, "bias2_q0");
    sc_trace(mVcdFile, weight3_address0, "weight3_address0");
    sc_trace(mVcdFile, weight3_ce0, "weight3_ce0");
    sc_trace(mVcdFile, weight3_q0, "weight3_q0");
    sc_trace(mVcdFile, bias3_address0, "bias3_address0");
    sc_trace(mVcdFile, bias3_ce0, "bias3_ce0");
    sc_trace(mVcdFile, bias3_q0, "bias3_q0");
    sc_trace(mVcdFile, grp_fu_451_p2, "grp_fu_451_p2");
    sc_trace(mVcdFile, reg_465, "reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state93, "ap_CS_fsm_state93");
    sc_trace(mVcdFile, grp_fu_443_p2, "grp_fu_443_p2");
    sc_trace(mVcdFile, reg_470, "reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, ap_CS_fsm_state74, "ap_CS_fsm_state74");
    sc_trace(mVcdFile, ap_CS_fsm_state97, "ap_CS_fsm_state97");
    sc_trace(mVcdFile, ap_CS_fsm_state117, "ap_CS_fsm_state117");
    sc_trace(mVcdFile, reg_478, "reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, ap_CS_fsm_state102, "ap_CS_fsm_state102");
    sc_trace(mVcdFile, output1_q0, "output1_q0");
    sc_trace(mVcdFile, reg_485, "reg_485");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, grp_fu_460_p2, "grp_fu_460_p2");
    sc_trace(mVcdFile, reg_490, "reg_490");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state70, "ap_CS_fsm_state70");
    sc_trace(mVcdFile, ap_CS_fsm_state113, "ap_CS_fsm_state113");
    sc_trace(mVcdFile, grp_fu_455_p2, "grp_fu_455_p2");
    sc_trace(mVcdFile, reg_495, "reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, ap_CS_fsm_state129, "ap_CS_fsm_state129");
    sc_trace(mVcdFile, output2_q0, "output2_q0");
    sc_trace(mVcdFile, reg_502, "reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, ap_CS_fsm_state90, "ap_CS_fsm_state90");
    sc_trace(mVcdFile, next_mul_fu_507_p2, "next_mul_fu_507_p2");
    sc_trace(mVcdFile, next_mul_reg_791, "next_mul_reg_791");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, k_4_fu_519_p2, "k_4_fu_519_p2");
    sc_trace(mVcdFile, k_4_reg_799, "k_4_reg_799");
    sc_trace(mVcdFile, tmp_fu_525_p1, "tmp_fu_525_p1");
    sc_trace(mVcdFile, tmp_reg_804, "tmp_reg_804");
    sc_trace(mVcdFile, exitcond7_fu_513_p2, "exitcond7_fu_513_p2");
    sc_trace(mVcdFile, j_3_fu_535_p2, "j_3_fu_535_p2");
    sc_trace(mVcdFile, j_3_reg_813, "j_3_reg_813");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond6_fu_529_p2, "exitcond6_fu_529_p2");
    sc_trace(mVcdFile, weight1_load_reg_833, "weight1_load_reg_833");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, input_load_reg_838, "input_load_reg_838");
    sc_trace(mVcdFile, bias1_load_reg_843, "bias1_load_reg_843");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_fu_567_p2, "i_fu_567_p2");
    sc_trace(mVcdFile, i_reg_851, "i_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, output1_addr_2_reg_856, "output1_addr_2_reg_856");
    sc_trace(mVcdFile, exitcond_fu_561_p2, "exitcond_fu_561_p2");
    sc_trace(mVcdFile, tmp_12_i_fu_588_p1, "tmp_12_i_fu_588_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, k_5_fu_599_p2, "k_5_fu_599_p2");
    sc_trace(mVcdFile, k_5_reg_869, "k_5_reg_869");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, tmp_1_fu_605_p1, "tmp_1_fu_605_p1");
    sc_trace(mVcdFile, tmp_1_reg_874, "tmp_1_reg_874");
    sc_trace(mVcdFile, exitcond5_fu_593_p2, "exitcond5_fu_593_p2");
    sc_trace(mVcdFile, tmp_12_cast_fu_617_p1, "tmp_12_cast_fu_617_p1");
    sc_trace(mVcdFile, tmp_12_cast_reg_880, "tmp_12_cast_reg_880");
    sc_trace(mVcdFile, j_4_fu_627_p2, "j_4_fu_627_p2");
    sc_trace(mVcdFile, j_4_reg_888, "j_4_reg_888");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, exitcond4_fu_621_p2, "exitcond4_fu_621_p2");
    sc_trace(mVcdFile, weight2_load_reg_908, "weight2_load_reg_908");
    sc_trace(mVcdFile, bias2_load_reg_913, "bias2_load_reg_913");
    sc_trace(mVcdFile, ap_CS_fsm_state55, "ap_CS_fsm_state55");
    sc_trace(mVcdFile, i_1_fu_658_p2, "i_1_fu_658_p2");
    sc_trace(mVcdFile, i_1_reg_921, "i_1_reg_921");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, output2_addr_2_reg_926, "output2_addr_2_reg_926");
    sc_trace(mVcdFile, exitcond8_fu_652_p2, "exitcond8_fu_652_p2");
    sc_trace(mVcdFile, tmp_12_i1_fu_679_p1, "tmp_12_i1_fu_679_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, k_7_fu_690_p2, "k_7_fu_690_p2");
    sc_trace(mVcdFile, k_7_reg_939, "k_7_reg_939");
    sc_trace(mVcdFile, ap_CS_fsm_state88, "ap_CS_fsm_state88");
    sc_trace(mVcdFile, tmp_8_fu_696_p1, "tmp_8_fu_696_p1");
    sc_trace(mVcdFile, tmp_8_reg_944, "tmp_8_reg_944");
    sc_trace(mVcdFile, exitcond3_fu_684_p2, "exitcond3_fu_684_p2");
    sc_trace(mVcdFile, tmp_15_cast_fu_708_p1, "tmp_15_cast_fu_708_p1");
    sc_trace(mVcdFile, tmp_15_cast_reg_950, "tmp_15_cast_reg_950");
    sc_trace(mVcdFile, j_5_fu_718_p2, "j_5_fu_718_p2");
    sc_trace(mVcdFile, j_5_reg_958, "j_5_reg_958");
    sc_trace(mVcdFile, ap_CS_fsm_state89, "ap_CS_fsm_state89");
    sc_trace(mVcdFile, exitcond2_fu_712_p2, "exitcond2_fu_712_p2");
    sc_trace(mVcdFile, weight3_load_reg_978, "weight3_load_reg_978");
    sc_trace(mVcdFile, bias3_load_reg_983, "bias3_load_reg_983");
    sc_trace(mVcdFile, ap_CS_fsm_state98, "ap_CS_fsm_state98");
    sc_trace(mVcdFile, i_2_fu_749_p2, "i_2_fu_749_p2");
    sc_trace(mVcdFile, i_2_reg_991, "i_2_reg_991");
    sc_trace(mVcdFile, ap_CS_fsm_state104, "ap_CS_fsm_state104");
    sc_trace(mVcdFile, output3_addr_2_reg_996, "output3_addr_2_reg_996");
    sc_trace(mVcdFile, exitcond9_fu_743_p2, "exitcond9_fu_743_p2");
    sc_trace(mVcdFile, output3_q0, "output3_q0");
    sc_trace(mVcdFile, output3_load_1_reg_1001, "output3_load_1_reg_1001");
    sc_trace(mVcdFile, ap_CS_fsm_state105, "ap_CS_fsm_state105");
    sc_trace(mVcdFile, tmp_12_i2_fu_769_p1, "tmp_12_i2_fu_769_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state106, "ap_CS_fsm_state106");
    sc_trace(mVcdFile, k_6_fu_780_p2, "k_6_fu_780_p2");
    sc_trace(mVcdFile, k_6_reg_1014, "k_6_reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state131, "ap_CS_fsm_state131");
    sc_trace(mVcdFile, tmp_3_fu_786_p1, "tmp_3_fu_786_p1");
    sc_trace(mVcdFile, tmp_3_reg_1019, "tmp_3_reg_1019");
    sc_trace(mVcdFile, exitcond1_fu_774_p2, "exitcond1_fu_774_p2");
    sc_trace(mVcdFile, output1_address0, "output1_address0");
    sc_trace(mVcdFile, output1_ce0, "output1_ce0");
    sc_trace(mVcdFile, output1_we0, "output1_we0");
    sc_trace(mVcdFile, output1_d0, "output1_d0");
    sc_trace(mVcdFile, output2_address0, "output2_address0");
    sc_trace(mVcdFile, output2_ce0, "output2_ce0");
    sc_trace(mVcdFile, output2_we0, "output2_we0");
    sc_trace(mVcdFile, output2_d0, "output2_d0");
    sc_trace(mVcdFile, output3_address0, "output3_address0");
    sc_trace(mVcdFile, output3_ce0, "output3_ce0");
    sc_trace(mVcdFile, output3_we0, "output3_we0");
    sc_trace(mVcdFile, output3_d0, "output3_d0");
    sc_trace(mVcdFile, k_reg_285, "k_reg_285");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, phi_mul_reg_296, "phi_mul_reg_296");
    sc_trace(mVcdFile, z1_reg_308, "z1_reg_308");
    sc_trace(mVcdFile, j_reg_320, "j_reg_320");
    sc_trace(mVcdFile, i_i_reg_331, "i_i_reg_331");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, k_1_reg_342, "k_1_reg_342");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, j_1_reg_353, "j_1_reg_353");
    sc_trace(mVcdFile, z2_reg_364, "z2_reg_364");
    sc_trace(mVcdFile, i_i9_reg_376, "i_i9_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_state87, "ap_CS_fsm_state87");
    sc_trace(mVcdFile, k_2_reg_387, "k_2_reg_387");
    sc_trace(mVcdFile, ap_CS_fsm_state103, "ap_CS_fsm_state103");
    sc_trace(mVcdFile, j_2_reg_398, "j_2_reg_398");
    sc_trace(mVcdFile, z3_reg_409, "z3_reg_409");
    sc_trace(mVcdFile, i_i1_reg_421, "i_i1_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state130, "ap_CS_fsm_state130");
    sc_trace(mVcdFile, k_3_reg_432, "k_3_reg_432");
    sc_trace(mVcdFile, ap_CS_fsm_state132, "ap_CS_fsm_state132");
    sc_trace(mVcdFile, tmp_10_cast_fu_556_p1, "tmp_10_cast_fu_556_p1");
    sc_trace(mVcdFile, tmp_4_fu_541_p1, "tmp_4_fu_541_p1");
    sc_trace(mVcdFile, tmp_i_fu_573_p1, "tmp_i_fu_573_p1");
    sc_trace(mVcdFile, tmp_13_cast_fu_647_p1, "tmp_13_cast_fu_647_p1");
    sc_trace(mVcdFile, tmp_s_fu_633_p1, "tmp_s_fu_633_p1");
    sc_trace(mVcdFile, tmp_i1_fu_664_p1, "tmp_i1_fu_664_p1");
    sc_trace(mVcdFile, tmp_16_cast_fu_738_p1, "tmp_16_cast_fu_738_p1");
    sc_trace(mVcdFile, tmp_6_fu_724_p1, "tmp_6_fu_724_p1");
    sc_trace(mVcdFile, tmp_i2_fu_755_p1, "tmp_i2_fu_755_p1");
    sc_trace(mVcdFile, input_r_Addr_A_orig, "input_r_Addr_A_orig");
    sc_trace(mVcdFile, output_r_Addr_A_orig, "output_r_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_443_p0, "grp_fu_443_p0");
    sc_trace(mVcdFile, grp_fu_443_p1, "grp_fu_443_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state56, "ap_CS_fsm_state56");
    sc_trace(mVcdFile, ap_CS_fsm_state71, "ap_CS_fsm_state71");
    sc_trace(mVcdFile, ap_CS_fsm_state94, "ap_CS_fsm_state94");
    sc_trace(mVcdFile, ap_CS_fsm_state99, "ap_CS_fsm_state99");
    sc_trace(mVcdFile, ap_CS_fsm_state114, "ap_CS_fsm_state114");
    sc_trace(mVcdFile, grp_fu_451_p0, "grp_fu_451_p0");
    sc_trace(mVcdFile, grp_fu_451_p1, "grp_fu_451_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state91, "ap_CS_fsm_state91");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state75, "ap_CS_fsm_state75");
    sc_trace(mVcdFile, ap_CS_fsm_state118, "ap_CS_fsm_state118");
    sc_trace(mVcdFile, grp_fu_460_p1, "grp_fu_460_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_546_p1, "tmp_4_cast_fu_546_p1");
    sc_trace(mVcdFile, tmp_9_fu_550_p2, "tmp_9_fu_550_p2");
    sc_trace(mVcdFile, tmp_12_to_int_i_fu_578_p1, "tmp_12_to_int_i_fu_578_p1");
    sc_trace(mVcdFile, tmp_12_neg_i_fu_582_p2, "tmp_12_neg_i_fu_582_p2");
    sc_trace(mVcdFile, tmp_10_fu_609_p3, "tmp_10_fu_609_p3");
    sc_trace(mVcdFile, tmp_cast_fu_638_p1, "tmp_cast_fu_638_p1");
    sc_trace(mVcdFile, tmp_11_fu_642_p2, "tmp_11_fu_642_p2");
    sc_trace(mVcdFile, tmp_12_to_int_i1_fu_669_p1, "tmp_12_to_int_i1_fu_669_p1");
    sc_trace(mVcdFile, tmp_12_neg_i1_fu_673_p2, "tmp_12_neg_i1_fu_673_p2");
    sc_trace(mVcdFile, tmp_12_fu_700_p3, "tmp_12_fu_700_p3");
    sc_trace(mVcdFile, tmp_6_cast_fu_729_p1, "tmp_6_cast_fu_729_p1");
    sc_trace(mVcdFile, tmp_13_fu_733_p2, "tmp_13_fu_733_p2");
    sc_trace(mVcdFile, tmp_12_to_int_i2_fu_760_p1, "tmp_12_to_int_i2_fu_760_p1");
    sc_trace(mVcdFile, tmp_12_neg_i2_fu_763_p2, "tmp_12_neg_i2_fu_763_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("mnist_nn_predict.hdltvin.dat");
    mHdltvoutHandle.open("mnist_nn_predict.hdltvout.dat");
}

mnist_nn_predict::~mnist_nn_predict() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete weight1_U;
    delete bias1_U;
    delete weight2_U;
    delete bias2_U;
    delete weight3_U;
    delete bias3_U;
    delete mnist_nn_predict_CRTL_BUS_s_axi_U;
    delete output1_U;
    delete output2_U;
    delete output3_U;
    delete mnist_nn_predict_fadd_32ns_32ns_32_4_full_dsp_1_U1;
    delete mnist_nn_predict_fmul_32ns_32ns_32_3_max_dsp_1_U2;
    delete mnist_nn_predict_fdiv_32ns_32ns_32_12_1_U3;
    delete mnist_nn_predict_fexp_32ns_32ns_32_8_full_dsp_1_U4;
}

void mnist_nn_predict::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void mnist_nn_predict::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void mnist_nn_predict::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void mnist_nn_predict::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_684_p2.read()))) {
        i_i1_reg_421 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read())) {
        i_i1_reg_421 = i_2_reg_991.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_593_p2.read()))) {
        i_i9_reg_376 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        i_i9_reg_376 = i_1_reg_921.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_513_p2.read(), ap_const_lv1_1))) {
        i_i_reg_331 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        i_i_reg_331 = i_reg_851.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_593_p2.read()))) {
        j_1_reg_353 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        j_1_reg_353 = j_4_reg_888.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_684_p2.read()))) {
        j_2_reg_398 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        j_2_reg_398 = j_5_reg_958.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_513_p2.read(), ap_const_lv1_0))) {
        j_reg_320 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_reg_320 = j_3_reg_813.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_561_p2.read()))) {
        k_1_reg_342 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        k_1_reg_342 = k_5_reg_869.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_652_p2.read()))) {
        k_2_reg_387 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        k_2_reg_387 = k_7_reg_939.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_743_p2.read()))) {
        k_3_reg_432 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read())) {
        k_3_reg_432 = k_6_reg_1014.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        k_reg_285 = k_4_reg_799.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        k_reg_285 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        phi_mul_reg_296 = next_mul_reg_791.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_296 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_513_p2.read(), ap_const_lv1_0))) {
        z1_reg_308 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        z1_reg_308 = grp_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_593_p2.read()))) {
        z2_reg_364 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        z2_reg_364 = grp_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_684_p2.read()))) {
        z3_reg_409 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read())) {
        z3_reg_409 = grp_fu_443_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        bias1_load_reg_843 = bias1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state55.read())) {
        bias2_load_reg_913 = bias2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state98.read())) {
        bias3_load_reg_983 = bias3_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        i_1_reg_921 = i_1_fu_658_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read())) {
        i_2_reg_991 = i_2_fu_749_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_reg_851 = i_fu_567_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        input_load_reg_838 = input_r_Dout_A.read();
        weight1_load_reg_833 = weight1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_3_reg_813 = j_3_fu_535_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        j_4_reg_888 = j_4_fu_627_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        j_5_reg_958 = j_5_fu_718_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        k_4_reg_799 = k_4_fu_519_p2.read();
        next_mul_reg_791 = next_mul_fu_507_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        k_5_reg_869 = k_5_fu_599_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read())) {
        k_6_reg_1014 = k_6_fu_780_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read())) {
        k_7_reg_939 = k_7_fu_690_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_561_p2.read()))) {
        output1_addr_2_reg_856 =  (sc_lv<6>) (tmp_i_fu_573_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_652_p2.read()))) {
        output2_addr_2_reg_926 =  (sc_lv<5>) (tmp_i1_fu_664_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_743_p2.read()))) {
        output3_addr_2_reg_996 =  (sc_lv<4>) (tmp_i2_fu_755_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state105.read())) {
        output3_load_1_reg_1001 = output3_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state93.read()))) {
        reg_465 = grp_fu_451_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state74.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state97.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()))) {
        reg_470 = grp_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state102.read()))) {
        reg_478 = grp_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        reg_485 = output1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state70.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state113.read()))) {
        reg_490 = grp_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read()))) {
        reg_495 = grp_fu_455_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read()))) {
        reg_502 = output2_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_593_p2.read()))) {
        tmp_12_cast_reg_880 = tmp_12_cast_fu_617_p1.read();
        tmp_1_reg_874 = tmp_1_fu_605_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_684_p2.read()))) {
        tmp_15_cast_reg_950 = tmp_15_cast_fu_708_p1.read();
        tmp_8_reg_944 = tmp_8_fu_696_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_774_p2.read()))) {
        tmp_3_reg_1019 = tmp_3_fu_786_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond7_fu_513_p2.read(), ap_const_lv1_0))) {
        tmp_reg_804 = tmp_fu_525_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        weight2_load_reg_908 = weight2_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state90.read())) {
        weight3_load_reg_978 = weight3_q0.read();
    }
}

void mnist_nn_predict::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mnist_nn_predict::thread_ap_CS_fsm_state102() {
    ap_CS_fsm_state102 = ap_CS_fsm.read()[101];
}

void mnist_nn_predict::thread_ap_CS_fsm_state103() {
    ap_CS_fsm_state103 = ap_CS_fsm.read()[102];
}

void mnist_nn_predict::thread_ap_CS_fsm_state104() {
    ap_CS_fsm_state104 = ap_CS_fsm.read()[103];
}

void mnist_nn_predict::thread_ap_CS_fsm_state105() {
    ap_CS_fsm_state105 = ap_CS_fsm.read()[104];
}

void mnist_nn_predict::thread_ap_CS_fsm_state106() {
    ap_CS_fsm_state106 = ap_CS_fsm.read()[105];
}

void mnist_nn_predict::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void mnist_nn_predict::thread_ap_CS_fsm_state113() {
    ap_CS_fsm_state113 = ap_CS_fsm.read()[112];
}

void mnist_nn_predict::thread_ap_CS_fsm_state114() {
    ap_CS_fsm_state114 = ap_CS_fsm.read()[113];
}

void mnist_nn_predict::thread_ap_CS_fsm_state117() {
    ap_CS_fsm_state117 = ap_CS_fsm.read()[116];
}

void mnist_nn_predict::thread_ap_CS_fsm_state118() {
    ap_CS_fsm_state118 = ap_CS_fsm.read()[117];
}

void mnist_nn_predict::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void mnist_nn_predict::thread_ap_CS_fsm_state129() {
    ap_CS_fsm_state129 = ap_CS_fsm.read()[128];
}

void mnist_nn_predict::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void mnist_nn_predict::thread_ap_CS_fsm_state130() {
    ap_CS_fsm_state130 = ap_CS_fsm.read()[129];
}

void mnist_nn_predict::thread_ap_CS_fsm_state131() {
    ap_CS_fsm_state131 = ap_CS_fsm.read()[130];
}

void mnist_nn_predict::thread_ap_CS_fsm_state132() {
    ap_CS_fsm_state132 = ap_CS_fsm.read()[131];
}

void mnist_nn_predict::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void mnist_nn_predict::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void mnist_nn_predict::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void mnist_nn_predict::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void mnist_nn_predict::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mnist_nn_predict::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void mnist_nn_predict::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void mnist_nn_predict::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void mnist_nn_predict::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mnist_nn_predict::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void mnist_nn_predict::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void mnist_nn_predict::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mnist_nn_predict::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void mnist_nn_predict::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void mnist_nn_predict::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void mnist_nn_predict::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void mnist_nn_predict::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void mnist_nn_predict::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void mnist_nn_predict::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mnist_nn_predict::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void mnist_nn_predict::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void mnist_nn_predict::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void mnist_nn_predict::thread_ap_CS_fsm_state55() {
    ap_CS_fsm_state55 = ap_CS_fsm.read()[54];
}

void mnist_nn_predict::thread_ap_CS_fsm_state56() {
    ap_CS_fsm_state56 = ap_CS_fsm.read()[55];
}

void mnist_nn_predict::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void mnist_nn_predict::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void mnist_nn_predict::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void mnist_nn_predict::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void mnist_nn_predict::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void mnist_nn_predict::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void mnist_nn_predict::thread_ap_CS_fsm_state70() {
    ap_CS_fsm_state70 = ap_CS_fsm.read()[69];
}

void mnist_nn_predict::thread_ap_CS_fsm_state71() {
    ap_CS_fsm_state71 = ap_CS_fsm.read()[70];
}

void mnist_nn_predict::thread_ap_CS_fsm_state74() {
    ap_CS_fsm_state74 = ap_CS_fsm.read()[73];
}

void mnist_nn_predict::thread_ap_CS_fsm_state75() {
    ap_CS_fsm_state75 = ap_CS_fsm.read()[74];
}

void mnist_nn_predict::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void mnist_nn_predict::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void mnist_nn_predict::thread_ap_CS_fsm_state87() {
    ap_CS_fsm_state87 = ap_CS_fsm.read()[86];
}

void mnist_nn_predict::thread_ap_CS_fsm_state88() {
    ap_CS_fsm_state88 = ap_CS_fsm.read()[87];
}

void mnist_nn_predict::thread_ap_CS_fsm_state89() {
    ap_CS_fsm_state89 = ap_CS_fsm.read()[88];
}

void mnist_nn_predict::thread_ap_CS_fsm_state90() {
    ap_CS_fsm_state90 = ap_CS_fsm.read()[89];
}

void mnist_nn_predict::thread_ap_CS_fsm_state91() {
    ap_CS_fsm_state91 = ap_CS_fsm.read()[90];
}

void mnist_nn_predict::thread_ap_CS_fsm_state93() {
    ap_CS_fsm_state93 = ap_CS_fsm.read()[92];
}

void mnist_nn_predict::thread_ap_CS_fsm_state94() {
    ap_CS_fsm_state94 = ap_CS_fsm.read()[93];
}

void mnist_nn_predict::thread_ap_CS_fsm_state97() {
    ap_CS_fsm_state97 = ap_CS_fsm.read()[96];
}

void mnist_nn_predict::thread_ap_CS_fsm_state98() {
    ap_CS_fsm_state98 = ap_CS_fsm.read()[97];
}

void mnist_nn_predict::thread_ap_CS_fsm_state99() {
    ap_CS_fsm_state99 = ap_CS_fsm.read()[98];
}

void mnist_nn_predict::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_774_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_774_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void mnist_nn_predict::thread_bias1_address0() {
    bias1_address0 =  (sc_lv<6>) (tmp_reg_804.read());
}

void mnist_nn_predict::thread_bias1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        bias1_ce0 = ap_const_logic_1;
    } else {
        bias1_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_bias2_address0() {
    bias2_address0 =  (sc_lv<5>) (tmp_1_reg_874.read());
}

void mnist_nn_predict::thread_bias2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        bias2_ce0 = ap_const_logic_1;
    } else {
        bias2_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_bias3_address0() {
    bias3_address0 =  (sc_lv<4>) (tmp_8_reg_944.read());
}

void mnist_nn_predict::thread_bias3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        bias3_ce0 = ap_const_logic_1;
    } else {
        bias3_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_exitcond1_fu_774_p2() {
    exitcond1_fu_774_p2 = (!k_3_reg_432.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(k_3_reg_432.read() == ap_const_lv4_A);
}

void mnist_nn_predict::thread_exitcond2_fu_712_p2() {
    exitcond2_fu_712_p2 = (!j_2_reg_398.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_2_reg_398.read() == ap_const_lv6_20);
}

void mnist_nn_predict::thread_exitcond3_fu_684_p2() {
    exitcond3_fu_684_p2 = (!k_2_reg_387.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(k_2_reg_387.read() == ap_const_lv4_A);
}

void mnist_nn_predict::thread_exitcond4_fu_621_p2() {
    exitcond4_fu_621_p2 = (!j_1_reg_353.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_353.read() == ap_const_lv7_40);
}

void mnist_nn_predict::thread_exitcond5_fu_593_p2() {
    exitcond5_fu_593_p2 = (!k_1_reg_342.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_342.read() == ap_const_lv6_20);
}

void mnist_nn_predict::thread_exitcond6_fu_529_p2() {
    exitcond6_fu_529_p2 = (!j_reg_320.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_320.read() == ap_const_lv10_310);
}

void mnist_nn_predict::thread_exitcond7_fu_513_p2() {
    exitcond7_fu_513_p2 = (!k_reg_285.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_285.read() == ap_const_lv7_40);
}

void mnist_nn_predict::thread_exitcond8_fu_652_p2() {
    exitcond8_fu_652_p2 = (!i_i9_reg_376.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_i9_reg_376.read() == ap_const_lv6_20);
}

void mnist_nn_predict::thread_exitcond9_fu_743_p2() {
    exitcond9_fu_743_p2 = (!i_i1_reg_421.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_i1_reg_421.read() == ap_const_lv4_A);
}

void mnist_nn_predict::thread_exitcond_fu_561_p2() {
    exitcond_fu_561_p2 = (!i_i_reg_331.read().is_01() || !ap_const_lv7_40.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_331.read() == ap_const_lv7_40);
}

void mnist_nn_predict::thread_grp_fu_443_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read()))) {
        grp_fu_443_p0 = z3_reg_409.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read()))) {
        grp_fu_443_p0 = z2_reg_364.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()))) {
        grp_fu_443_p0 = reg_490.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        grp_fu_443_p0 = z1_reg_308.read();
    } else {
        grp_fu_443_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_grp_fu_443_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state99.read())) {
        grp_fu_443_p1 = bias3_load_reg_983.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state56.read())) {
        grp_fu_443_p1 = bias2_load_reg_913.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state71.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state114.read()))) {
        grp_fu_443_p1 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_443_p1 = bias1_load_reg_843.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state94.read()))) {
        grp_fu_443_p1 = reg_465.read();
    } else {
        grp_fu_443_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_grp_fu_451_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        grp_fu_451_p0 = weight3_load_reg_978.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_fu_451_p0 = weight2_load_reg_908.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_451_p0 = weight1_load_reg_833.read();
    } else {
        grp_fu_451_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_grp_fu_451_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state91.read())) {
        grp_fu_451_p1 = reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        grp_fu_451_p1 = reg_485.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_451_p1 = input_load_reg_838.read();
    } else {
        grp_fu_451_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_grp_fu_460_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state106.read())) {
        grp_fu_460_p1 = tmp_12_i2_fu_769_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        grp_fu_460_p1 = tmp_12_i1_fu_679_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_460_p1 = tmp_12_i_fu_588_p1.read();
    } else {
        grp_fu_460_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_i_1_fu_658_p2() {
    i_1_fu_658_p2 = (!i_i9_reg_376.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_i9_reg_376.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mnist_nn_predict::thread_i_2_fu_749_p2() {
    i_2_fu_749_p2 = (!i_i1_reg_421.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_i1_reg_421.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mnist_nn_predict::thread_i_fu_567_p2() {
    i_fu_567_p2 = (!i_i_reg_331.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_i_reg_331.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mnist_nn_predict::thread_input_r_Addr_A() {
    input_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): input_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void mnist_nn_predict::thread_input_r_Addr_A_orig() {
    input_r_Addr_A_orig =  (sc_lv<32>) (tmp_4_fu_541_p1.read());
}

void mnist_nn_predict::thread_input_r_Clk_A() {
    input_r_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void mnist_nn_predict::thread_input_r_Din_A() {
    input_r_Din_A = ap_const_lv32_0;
}

void mnist_nn_predict::thread_input_r_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        input_r_EN_A = ap_const_logic_1;
    } else {
        input_r_EN_A = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_input_r_Rst_A() {
    input_r_Rst_A = ap_rst_n_inv.read();
}

void mnist_nn_predict::thread_input_r_WEN_A() {
    input_r_WEN_A = ap_const_lv4_0;
}

void mnist_nn_predict::thread_j_3_fu_535_p2() {
    j_3_fu_535_p2 = (!j_reg_320.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(j_reg_320.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void mnist_nn_predict::thread_j_4_fu_627_p2() {
    j_4_fu_627_p2 = (!j_1_reg_353.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_1_reg_353.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mnist_nn_predict::thread_j_5_fu_718_p2() {
    j_5_fu_718_p2 = (!j_2_reg_398.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_2_reg_398.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mnist_nn_predict::thread_k_4_fu_519_p2() {
    k_4_fu_519_p2 = (!k_reg_285.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(k_reg_285.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void mnist_nn_predict::thread_k_5_fu_599_p2() {
    k_5_fu_599_p2 = (!k_1_reg_342.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(k_1_reg_342.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mnist_nn_predict::thread_k_6_fu_780_p2() {
    k_6_fu_780_p2 = (!k_3_reg_432.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_3_reg_432.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mnist_nn_predict::thread_k_7_fu_690_p2() {
    k_7_fu_690_p2 = (!k_2_reg_387.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_2_reg_387.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mnist_nn_predict::thread_next_mul_fu_507_p2() {
    next_mul_fu_507_p2 = (!phi_mul_reg_296.read().is_01() || !ap_const_lv16_310.is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_296.read()) + sc_biguint<16>(ap_const_lv16_310));
}

void mnist_nn_predict::thread_output1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        output1_address0 =  (sc_lv<6>) (tmp_s_fu_633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        output1_address0 = output1_addr_2_reg_856.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        output1_address0 =  (sc_lv<6>) (tmp_i_fu_573_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        output1_address0 =  (sc_lv<6>) (tmp_reg_804.read());
    } else {
        output1_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void mnist_nn_predict::thread_output1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        output1_ce0 = ap_const_logic_1;
    } else {
        output1_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output1_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        output1_d0 = reg_495.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        output1_d0 = reg_478.read();
    } else {
        output1_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_output1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        output1_we0 = ap_const_logic_1;
    } else {
        output1_we0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        output2_address0 =  (sc_lv<5>) (tmp_6_fu_724_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        output2_address0 = output2_addr_2_reg_926.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        output2_address0 =  (sc_lv<5>) (tmp_i1_fu_664_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        output2_address0 =  (sc_lv<5>) (tmp_1_reg_874.read());
    } else {
        output2_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void mnist_nn_predict::thread_output2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()))) {
        output2_ce0 = ap_const_logic_1;
    } else {
        output2_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read())) {
        output2_d0 = reg_495.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        output2_d0 = reg_478.read();
    } else {
        output2_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_output2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state87.read()))) {
        output2_we0 = ap_const_logic_1;
    } else {
        output2_we0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read())) {
        output3_address0 =  (sc_lv<4>) (tmp_3_fu_786_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read())) {
        output3_address0 = output3_addr_2_reg_996.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read())) {
        output3_address0 =  (sc_lv<4>) (tmp_i2_fu_755_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        output3_address0 =  (sc_lv<4>) (tmp_8_reg_944.read());
    } else {
        output3_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void mnist_nn_predict::thread_output3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()))) {
        output3_ce0 = ap_const_logic_1;
    } else {
        output3_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output3_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read())) {
        output3_d0 = reg_495.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read())) {
        output3_d0 = reg_478.read();
    } else {
        output3_d0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void mnist_nn_predict::thread_output3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state103.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()))) {
        output3_we0 = ap_const_logic_1;
    } else {
        output3_we0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output_r_Addr_A() {
    output_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): output_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void mnist_nn_predict::thread_output_r_Addr_A_orig() {
    output_r_Addr_A_orig =  (sc_lv<32>) (tmp_3_reg_1019.read());
}

void mnist_nn_predict::thread_output_r_Clk_A() {
    output_r_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void mnist_nn_predict::thread_output_r_Din_A() {
    output_r_Din_A = output3_q0.read();
}

void mnist_nn_predict::thread_output_r_EN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read())) {
        output_r_EN_A = ap_const_logic_1;
    } else {
        output_r_EN_A = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_output_r_Rst_A() {
    output_r_Rst_A = ap_rst_n_inv.read();
}

void mnist_nn_predict::thread_output_r_WEN_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read())) {
        output_r_WEN_A = ap_const_lv4_F;
    } else {
        output_r_WEN_A = ap_const_lv4_0;
    }
}

void mnist_nn_predict::thread_tmp_10_cast_fu_556_p1() {
    tmp_10_cast_fu_556_p1 = esl_zext<64,16>(tmp_9_fu_550_p2.read());
}

void mnist_nn_predict::thread_tmp_10_fu_609_p3() {
    tmp_10_fu_609_p3 = esl_concat<6,6>(k_1_reg_342.read(), ap_const_lv6_0);
}

void mnist_nn_predict::thread_tmp_11_fu_642_p2() {
    tmp_11_fu_642_p2 = (!tmp_12_cast_reg_880.read().is_01() || !tmp_cast_fu_638_p1.read().is_01())? sc_lv<13>(): (sc_biguint<13>(tmp_12_cast_reg_880.read()) + sc_biguint<13>(tmp_cast_fu_638_p1.read()));
}

void mnist_nn_predict::thread_tmp_12_cast_fu_617_p1() {
    tmp_12_cast_fu_617_p1 = esl_zext<13,12>(tmp_10_fu_609_p3.read());
}

void mnist_nn_predict::thread_tmp_12_fu_700_p3() {
    tmp_12_fu_700_p3 = esl_concat<4,5>(k_2_reg_387.read(), ap_const_lv5_0);
}

void mnist_nn_predict::thread_tmp_12_i1_fu_679_p1() {
    tmp_12_i1_fu_679_p1 = tmp_12_neg_i1_fu_673_p2.read();
}

void mnist_nn_predict::thread_tmp_12_i2_fu_769_p1() {
    tmp_12_i2_fu_769_p1 = tmp_12_neg_i2_fu_763_p2.read();
}

void mnist_nn_predict::thread_tmp_12_i_fu_588_p1() {
    tmp_12_i_fu_588_p1 = tmp_12_neg_i_fu_582_p2.read();
}

void mnist_nn_predict::thread_tmp_12_neg_i1_fu_673_p2() {
    tmp_12_neg_i1_fu_673_p2 = (tmp_12_to_int_i1_fu_669_p1.read() ^ ap_const_lv32_80000000);
}

void mnist_nn_predict::thread_tmp_12_neg_i2_fu_763_p2() {
    tmp_12_neg_i2_fu_763_p2 = (tmp_12_to_int_i2_fu_760_p1.read() ^ ap_const_lv32_80000000);
}

void mnist_nn_predict::thread_tmp_12_neg_i_fu_582_p2() {
    tmp_12_neg_i_fu_582_p2 = (tmp_12_to_int_i_fu_578_p1.read() ^ ap_const_lv32_80000000);
}

void mnist_nn_predict::thread_tmp_12_to_int_i1_fu_669_p1() {
    tmp_12_to_int_i1_fu_669_p1 = reg_502.read();
}

void mnist_nn_predict::thread_tmp_12_to_int_i2_fu_760_p1() {
    tmp_12_to_int_i2_fu_760_p1 = output3_load_1_reg_1001.read();
}

void mnist_nn_predict::thread_tmp_12_to_int_i_fu_578_p1() {
    tmp_12_to_int_i_fu_578_p1 = reg_485.read();
}

void mnist_nn_predict::thread_tmp_13_cast_fu_647_p1() {
    tmp_13_cast_fu_647_p1 = esl_zext<64,13>(tmp_11_fu_642_p2.read());
}

void mnist_nn_predict::thread_tmp_13_fu_733_p2() {
    tmp_13_fu_733_p2 = (!tmp_15_cast_reg_950.read().is_01() || !tmp_6_cast_fu_729_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_15_cast_reg_950.read()) + sc_biguint<10>(tmp_6_cast_fu_729_p1.read()));
}

void mnist_nn_predict::thread_tmp_15_cast_fu_708_p1() {
    tmp_15_cast_fu_708_p1 = esl_zext<10,9>(tmp_12_fu_700_p3.read());
}

void mnist_nn_predict::thread_tmp_16_cast_fu_738_p1() {
    tmp_16_cast_fu_738_p1 = esl_zext<64,10>(tmp_13_fu_733_p2.read());
}

void mnist_nn_predict::thread_tmp_1_fu_605_p1() {
    tmp_1_fu_605_p1 = esl_zext<64,6>(k_1_reg_342.read());
}

void mnist_nn_predict::thread_tmp_3_fu_786_p1() {
    tmp_3_fu_786_p1 = esl_zext<64,4>(k_3_reg_432.read());
}

void mnist_nn_predict::thread_tmp_4_cast_fu_546_p1() {
    tmp_4_cast_fu_546_p1 = esl_zext<16,10>(j_reg_320.read());
}

void mnist_nn_predict::thread_tmp_4_fu_541_p1() {
    tmp_4_fu_541_p1 = esl_zext<64,10>(j_reg_320.read());
}

void mnist_nn_predict::thread_tmp_6_cast_fu_729_p1() {
    tmp_6_cast_fu_729_p1 = esl_zext<10,6>(j_2_reg_398.read());
}

void mnist_nn_predict::thread_tmp_6_fu_724_p1() {
    tmp_6_fu_724_p1 = esl_zext<64,6>(j_2_reg_398.read());
}

void mnist_nn_predict::thread_tmp_8_fu_696_p1() {
    tmp_8_fu_696_p1 = esl_zext<64,4>(k_2_reg_387.read());
}

void mnist_nn_predict::thread_tmp_9_fu_550_p2() {
    tmp_9_fu_550_p2 = (!phi_mul_reg_296.read().is_01() || !tmp_4_cast_fu_546_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(phi_mul_reg_296.read()) + sc_biguint<16>(tmp_4_cast_fu_546_p1.read()));
}

void mnist_nn_predict::thread_tmp_cast_fu_638_p1() {
    tmp_cast_fu_638_p1 = esl_zext<13,7>(j_1_reg_353.read());
}

void mnist_nn_predict::thread_tmp_fu_525_p1() {
    tmp_fu_525_p1 = esl_zext<64,7>(k_reg_285.read());
}

void mnist_nn_predict::thread_tmp_i1_fu_664_p1() {
    tmp_i1_fu_664_p1 = esl_zext<64,6>(i_i9_reg_376.read());
}

void mnist_nn_predict::thread_tmp_i2_fu_755_p1() {
    tmp_i2_fu_755_p1 = esl_zext<64,4>(i_i1_reg_421.read());
}

void mnist_nn_predict::thread_tmp_i_fu_573_p1() {
    tmp_i_fu_573_p1 = esl_zext<64,7>(i_i_reg_331.read());
}

void mnist_nn_predict::thread_tmp_s_fu_633_p1() {
    tmp_s_fu_633_p1 = esl_zext<64,7>(j_1_reg_353.read());
}

void mnist_nn_predict::thread_weight1_address0() {
    weight1_address0 =  (sc_lv<16>) (tmp_10_cast_fu_556_p1.read());
}

void mnist_nn_predict::thread_weight1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        weight1_ce0 = ap_const_logic_1;
    } else {
        weight1_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_weight2_address0() {
    weight2_address0 =  (sc_lv<11>) (tmp_13_cast_fu_647_p1.read());
}

void mnist_nn_predict::thread_weight2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        weight2_ce0 = ap_const_logic_1;
    } else {
        weight2_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_weight3_address0() {
    weight3_address0 =  (sc_lv<9>) (tmp_16_cast_fu_738_p1.read());
}

void mnist_nn_predict::thread_weight3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read())) {
        weight3_ce0 = ap_const_logic_1;
    } else {
        weight3_ce0 = ap_const_logic_0;
    }
}

void mnist_nn_predict::thread_ap_NS_fsm() {
    if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond7_fu_513_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state18;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond6_fu_529_p2.read(), ap_const_lv1_1))) {
            ap_NS_fsm = ap_ST_fsm_state12;
        } else {
            ap_NS_fsm = ap_ST_fsm_state4;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        ap_NS_fsm = ap_ST_fsm_state6;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state7;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        ap_NS_fsm = ap_ST_fsm_state8;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        ap_NS_fsm = ap_ST_fsm_state9;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        ap_NS_fsm = ap_ST_fsm_state10;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state2;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_561_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state45;
        } else {
            ap_NS_fsm = ap_ST_fsm_state19;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_593_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state61;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_621_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state55;
        } else {
            ap_NS_fsm = ap_ST_fsm_state47;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_652_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state88;
        } else {
            ap_NS_fsm = ap_ST_fsm_state62;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state88.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_684_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state104;
        } else {
            ap_NS_fsm = ap_ST_fsm_state89;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state89.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_712_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state98;
        } else {
            ap_NS_fsm = ap_ST_fsm_state90;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state104.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_743_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state131;
        } else {
            ap_NS_fsm = ap_ST_fsm_state105;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        ap_NS_fsm = ap_ST_fsm_state114;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        ap_NS_fsm = ap_ST_fsm_state116;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        ap_NS_fsm = ap_ST_fsm_state118;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        ap_NS_fsm = ap_ST_fsm_state121;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        ap_NS_fsm = ap_ST_fsm_state122;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        ap_NS_fsm = ap_ST_fsm_state125;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        ap_NS_fsm = ap_ST_fsm_state126;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        ap_NS_fsm = ap_ST_fsm_state128;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        ap_NS_fsm = ap_ST_fsm_state129;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        ap_NS_fsm = ap_ST_fsm_state130;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state131))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_774_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else {
            ap_NS_fsm = ap_ST_fsm_state132;
        }
    }
    else if (esl_seteq<1,132,132>(ap_CS_fsm.read(), ap_ST_fsm_state132))
    {
        ap_NS_fsm = ap_ST_fsm_state131;
    }
    else
    {
        ap_NS_fsm =  (sc_lv<132>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void mnist_nn_predict::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_r_Addr_A\" :  \"" << input_r_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_EN_A\" :  \"" << input_r_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_WEN_A\" :  \"" << input_r_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Din_A\" :  \"" << input_r_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_Dout_A\" :  \"" << input_r_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Clk_A\" :  \"" << input_r_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Rst_A\" :  \"" << input_r_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_Addr_A\" :  \"" << output_r_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_EN_A\" :  \"" << output_r_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_WEN_A\" :  \"" << output_r_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_Din_A\" :  \"" << output_r_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_Dout_A\" :  \"" << output_r_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_Clk_A\" :  \"" << output_r_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_Rst_A\" :  \"" << output_r_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWVALID\" :  \"" << s_axi_CRTL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_AWREADY\" :  \"" << s_axi_CRTL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_AWADDR\" :  \"" << s_axi_CRTL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WVALID\" :  \"" << s_axi_CRTL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_WREADY\" :  \"" << s_axi_CRTL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WDATA\" :  \"" << s_axi_CRTL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_WSTRB\" :  \"" << s_axi_CRTL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARVALID\" :  \"" << s_axi_CRTL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_ARREADY\" :  \"" << s_axi_CRTL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_ARADDR\" :  \"" << s_axi_CRTL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RVALID\" :  \"" << s_axi_CRTL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_RREADY\" :  \"" << s_axi_CRTL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RDATA\" :  \"" << s_axi_CRTL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_RRESP\" :  \"" << s_axi_CRTL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BVALID\" :  \"" << s_axi_CRTL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CRTL_BUS_BREADY\" :  \"" << s_axi_CRTL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CRTL_BUS_BRESP\" :  \"" << s_axi_CRTL_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

